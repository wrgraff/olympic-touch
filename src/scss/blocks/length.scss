.length {
	position: relative;
	z-index: 2;
	border-radius: 10px;

	.no-js &:focus-within {
		@include outline;
		outline-offset: 12px;
		outline-width: 4px;
	}
}

.length__group {
	position: relative;
	display: none;

	.no-js & {
		display: block;

		&:not(:last-child) {
			margin-bottom: 24px;
		}
	}

	@include breakpoint(medium) {
		flex-wrap: wrap;
		margin: 0 12px;

		.no-js & {
			display: flex;
		}
	}
}

.length__group_active {
	display: block;

	@include breakpoint(medium) {
		display: flex;
	}
}

.length__heading {
	display: none;
	margin: 0 0 8px 36px;

	color: $secondary-color;

	font-weight: 600;

	.no-js & {
		display: block;
	}

	@include breakpoint(medium) {
		flex-basis: 100%;
		margin-left: 0;
	}
}

.length__item {
	position: relative;

	display: flex;
	flex-wrap: wrap;
	align-items: baseline;
	padding-left: 36px;

	transition: color 200ms;

	&:not(:last-child) {
		padding-bottom: 16px;
	}

	&::before,
	&::after {
		content: '';
		position: absolute;
		top: 2px;
	}

	&::before {
		left: 0;
		z-index: 2;

		display: block;
		width: 24px;
		height: 24px;

		background-color: $white-color;
		border: 6px solid $gray-200-color;
		border-radius: 50%;

		transition: background-color 200ms, border-color 200ms, transform 200ms;
	}

	&::after {
		bottom: -3px;
		left: 10px;

		width: 4px;
		background-color: $gray-200-color;

		transition: background-color 200ms;
	}

	&:last-of-type::after {
		display: none;
	}

	&:hover {
		color: $primary-color;

		&::before {
			border-color: $gray-500-color;
		}
	}

	input:checked ~ & {
		// on border for every label in group with checked input
		&::before {
			border-color: $primary-color;
		}

		// on line for every label in group with checked input
		&::after {
			background-color: $primary-color;

			@include breakpoint(medium) {
				background-color: $gray-200-color;

				.no-js & {
					background-color: $primary-color;
				}
			}
		}
	}

	@for $i from 1 through 6 {
		input:nth-of-type(#{$i}):checked ~ &:nth-of-type(#{$i}) {
			// on fill for checked label
			&::before {
				background-color: $primary-color;
			}

			// fill for line in checked label to next label
			&::after {
				background-color: $gray-200-color;
			}

			// off border for every label after checked label
			& ~ .length__item::before {
				border-color: $gray-200-color;
			}

			& ~ .length__item:hover::before {
				border-color: $gray-500-color;
			}

			// off line for every label after checked label
			& ~ .length__item::after {
				background-color: $gray-200-color;
			}
		}
	}

	@include breakpoint(medium) {
		flex-basis: 25%;
		flex-grow: 1;
		display: block;
		padding-top: 36px;
		padding-left: 0;

		text-align: center;

		&:not(:last-child) {
			padding-bottom: 0;
		}

		&::before {
			left: 50%;
			transform: translateX(-50%);
		}

		&::after {
			top: 12px;
			right: -50%;
			bottom: auto;
			left: 50%;

			width: auto;
			height: 4px;
		}

		&:last-of-type {
			flex-basis: 37.5%;
			justify-content: flex-end;
			margin-right: -12px;

			text-align: right;

			&::before {
				left: 100%;
				transform: translateX(-100%);
			}
		}

		&:first-of-type {
			flex-basis: 12.5%;
			justify-content: flex-start;
			margin-left: -12px;

			text-align: left;

			&::before {
				left: 0;
				transform: none;
			}

			&::after {
				left: 0;
				right: -100%;
			}
		}

		&:nth-last-of-type(2) {
			&::after {
				right: -150%;
				right: calc(-150% + 10px);
			}
		}
	}
}

.length__item_over {
	color: $primary-color;

	&::before {
		transform: translateX(-50%) scale(1.3);
	}

	&:first-of-type::before {
		transform: scale(1.3);
	}

	&:last-of-type::before {
		transform: translateX(-100%) scale(1.3);
	}

	input:checked ~ &::before {
		transform: translateX(-50%) scale(1.3);
	}

	input:checked ~ &:first-of-type::before {
		transform: scale(1.3);
	}

	input:checked ~ &:last-of-type::before {
		transform: translateX(-100%) scale(1.3);
	}
}

.length__text {
	flex-basis: 100%;
	margin-bottom: 0;

	font-weight: 600;
}

.length__price {
	display: inline-block;
	margin-right: 8px;
	margin-bottom: 0;

	color: $secondary-color;

	font-weight: 600;

	.length__price_old + & {
		color: $primary-color;

		&::after {
			background-image: url(../img/ico/ru/ru-600-primary.svg);
		}
	}

	@include breakpoint(medium) {
		display: block;
		margin-right: 0;
	}
}

.length__price_old {
	order: 1;

	font-size: 14px;
}

.length__button {
	position: absolute;
	top: -14px;
	left: 100%;
	z-index: 5;

	width: 64px;
	height: 40px;

	background-color: transparent;
	background-repeat: no-repeat;
	background-position: 50% 100%;
	background-image: url(../img/ico/fire.svg);
	border: none;

	transform: translateX(-50%);
	transition: transform 200ms, box-shadow 200ms;

	&::after {
		content: '';
		position: absolute;
		right: 50%;
		bottom: 0;

		width: 24px;
		height: 24px;

		border-radius: 50%;

		transform: translateX(50%);
	}

	&:focus {
		outline: none;
	}

	&:hover,
	&:focus,
	&:active,
	&.length__button_active,
	.length__group:focus-within & {
		transform: translateX(-50%) scale(1.2);

		&::after {
			box-shadow: 0 0 0 4px rgba($primary-color, .3);
		}
	}
}

.length__connector {
	position: absolute;
	top: 12px;

	width: 100%;
	height: 4px;

	background-color: $primary-color;
}
